import { useState, useEffect } from "react";
import "../index.css";

const SimpleInput = (props) => {

  const [enteredInputName, setEnteredInputName] = useState('');
  const [enteredInputNameIsValid, setEnteredInputNameIsValid] = useState(false);
  const [enteredInputEmail, setEnteredInputEmail] = useState('');
  const [enteredInputEmailIsValid, setEnteredInputEmailIsValid] = useState(false);
  const [enteredInputNameIsTouched, setEnteredInputNameIsTouched] = useState(false);
  const [formIsValid, setFormIsValid] = useState(false);

  useEffect(() => {

    if (enteredInputName.trim().length > 0 &&enteredInputEmail.trim().length > 0 ){
      setFormIsValid(true)
    }
  },[enteredInputName,enteredInputEmail])

  const onChangeInputHandler = (event) => {
    setEnteredInputName(event.target.value)

    if (event.target.value.trim() !== ''){
      setEnteredInputNameIsValid(true);
    }
    else{
      setFormIsValid(false)
      setEnteredInputNameIsValid(false);
    }

  }

  const onBlurInputHandler = () => {

    setEnteredInputNameIsTouched(true);

    if (enteredInputName.trim() === ''){
      setEnteredInputNameIsValid(false);
      setEnteredInputName('');
      setFormIsValid(false)
    }
  }

  const onSubmitHandler = (event) => {
    event.preventDefault();
    setEnteredInputNameIsTouched(true);
    if (enteredInputName.trim() === ''){
      setEnteredInputNameIsValid(false);
    }
    // setEnteredInputNameIsValid(true);
    setEnteredInputName('');
  }


  ////////////////////////////////////////////////////////

  const onChangeInputEmailHandler = (event) => {
    setEnteredInputEmail(event.target.value)

    if (event.target.value.trim() !== ''){
      setEnteredInputEmailIsValid(true);
    }
    else{
      setFormIsValid(false)
      setEnteredInputEmailIsValid(false);
    }

  }
  const onBlurInputEmailHandler = (event) => {
    setEnteredInputNameIsTouched(true);

    if (enteredInputEmail.trim() === ''){
      setEnteredInputEmailIsValid(false);
      setEnteredInputEmail('');
      setFormIsValid(false)
    }
  }

  //////////////////////////////////////////////////////////

  const invalidName = !enteredInputNameIsValid && enteredInputNameIsTouched

  const invalidEmail = !enteredInputEmailIsValid && enteredInputNameIsTouched

  const namesInputClasses = invalidName && invalidEmail ? "form-control invalid" : "form-control"

  return (
    <form onSubmit={onSubmitHandler}>
      <div className={namesInputClasses}>
        <label htmlFor='name'>Your Name</label>
        <input type='text' id='name' value={enteredInputName} onChange={onChangeInputHandler} onBlur={onBlurInputHandler}/>
        { invalidName && <p className="error-text">User name must not be empty!</p>}
        <label htmlFor='email'>Your Email</label>
        <input type='text' id='email' value={enteredInputEmail} onChange={onChangeInputEmailHandler} onBlur={onBlurInputEmailHandler}/>
        { invalidEmail && <p className="error-text">Email must not be empty!</p>}
      </div>
      <div className="form-actions">
        <button type="submit" disabled={!formIsValid ? "disabled" : ""}>Submit</button>
      </div>
    </form>
  );
};

export default SimpleInput;
